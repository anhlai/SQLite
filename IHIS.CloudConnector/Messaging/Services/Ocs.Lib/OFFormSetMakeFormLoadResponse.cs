//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: input.proto
// Note: requires additional types generated from: import.proto
namespace IHIS.CloudConnector.Messaging
{

  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"OFFormSetMakeFormLoadResponse")]
  public partial class OFFormSetMakeFormLoadResponse : global::ProtoBuf.IExtensible
  {
    public OFFormSetMakeFormLoadResponse() {}
    
    private readonly global::System.Collections.Generic.List<ComboListItemInfo> _user_combo_item = new global::System.Collections.Generic.List<ComboListItemInfo>();
    [global::ProtoBuf.ProtoMember(1, Name=@"user_combo_item", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<ComboListItemInfo> user_combo_item
    {
      get { return _user_combo_item; }
    }
  
    private readonly global::System.Collections.Generic.List<ComboListItemInfo> _gwa_combo_item = new global::System.Collections.Generic.List<ComboListItemInfo>();
    [global::ProtoBuf.ProtoMember(2, Name=@"gwa_combo_item", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<ComboListItemInfo> gwa_combo_item
    {
      get { return _gwa_combo_item; }
    }
  
    private readonly global::System.Collections.Generic.List<OFMakeTreeViewInfo> _tree_view_item = new global::System.Collections.Generic.List<OFMakeTreeViewInfo>();
    [global::ProtoBuf.ProtoMember(3, Name=@"tree_view_item", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<OFMakeTreeViewInfo> tree_view_item
    {
      get { return _tree_view_item; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
