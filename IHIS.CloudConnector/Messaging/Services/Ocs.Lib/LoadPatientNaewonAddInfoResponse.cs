//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: service.proto
// Note: requires additional types generated from: import.proto
namespace IHIS.CloudConnector.Messaging
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"LoadPatientNaewonAddInfoResponse")]
  public partial class LoadPatientNaewonAddInfoResponse : global::ProtoBuf.IExtensible
  {
    public LoadPatientNaewonAddInfoResponse() {}
    
    private string _sp_flag = "";
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"sp_flag", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string sp_flag
    {
      get { return _sp_flag; }
      set { _sp_flag = value; }
    }
    private readonly global::System.Collections.Generic.List<LoadPatientNaewonAddInfo> _patient_add_info = new global::System.Collections.Generic.List<LoadPatientNaewonAddInfo>();
    [global::ProtoBuf.ProtoMember(2, Name=@"patient_add_info", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<LoadPatientNaewonAddInfo> patient_add_info
    {
      get { return _patient_add_info; }
    }
  
    private string _ret_val = "";
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"ret_val", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string ret_val
    {
      get { return _ret_val; }
      set { _ret_val = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}